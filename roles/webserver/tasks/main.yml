---
- name: set hostname
  hostname: 
    name: web
- name: Ensure Nginx is at the latest version
  apt:
    name: nginx
    state: latest
    update_cache: yes
- name: Make sure Nginx is running
  systemd:
    state: started
    name: nginx
    enabled: True
- name: Install php and its components
  apt:
    pkg:
    - php-fpm
    - php-mysql
    - php-curl
    - php-gd
    - php-intl
    - php-soap
    - php-xml
    - php-xmlrpc
    - php-zip
    - php-mbstring
    - mysql-client
    - mysql-server
    - net-tools
- name: Make sure php7.4-fpm is running
  systemd:
    state: started
    name: php7.4-fpm
    enabled: True
- name: Install git
  apt:
    name: git
    state: latest
- name: configure fstab
  lineinfile: 
    dest: /etc/fstab
    line: "{{ efs_id }}:/ /var/www  efs    defaults,_netdev        0 0"
- name: mount nfs
  shell:
    mount -a
- name: remove nginx default
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
    backup: yes
- name: remove nginx default
  file:
    path: /etc/nginx/sites-available/default
    state: absent
    backup: yes     
- name: Copy nginx configuration for wordpress
  template: src=wordpress.conf dest=/etc/nginx/sites-enabled/wordpress.conf
- name: restart nginx
  service: 
    name: nginx
    state: restarted
- name: create dir on efs
  file:
    path: /var/www/html
    state: directory
- name: Download WordPress
  get_url:
    url: https://wordpress.org/latest.tar.gz
    dest: /opt
- name: Create html directory under var/www
  file:
    path: /var/www/html
    state: directory
- name: Extract archive
  unarchive:
    creates: /var/www/html
    src: /opt/wordpress-latest.tar.gz
    dest: /var/www/html
    owner: www-data
    group: www-data
    remote_src: yes
- name: configure wp-config.php
  copy: 
    src: /var/www/html/wordpress/wp-config-sample.php
    dest: /var/www/html/wordpress/wp-config.php
    owner: www-data
    group: www-data
    remote_src: yes
- name: configure wp-config.php
  lineinfile: 
    dest: /var/www/html/wordpress/wp-config.php
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^database_name_here', line: 'define( "DB_NAME", ""{{ wp_db_name }}"" );' }
    - { regexp: '^username_here', line: 'define( "DB_USER", ""{{ wp_db_username }}"" );' }
    - { regexp: '^password_here', line: 'define( "DB_PASSWORD", ""{{ wp_db_password }}"" );' }
    - { regexp: '^localhost', line: 'define( "DB_HOST" , ""{{ wp_db_endpoint }}"" );' }